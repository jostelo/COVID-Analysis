u2 <- dCopula(Fs, my_clayton)
density[j,k] <- u2 * dnorm(y[1], mean = mu1[i], sd = s1[i]) * dnorm(y[2], mean = mu2[i], sd = s2[i])
}
}
res[[i]] <- density
us[[i]] <- ui
}
#===================================================
#Malnutrition. Get plots of the paper for
#best fitting cop-model (density plots)
#-----------------------------------------------
#Author: Jost von Petersdorff-Campen, petersdj@hu-berlin.de
#last edited on 19.07.2014
#===================================================
library(BayesX)
# library(R2BayesX)
library(bamlss)
library(png)
#please adapt accordingly!
#working directory
wd <- paste("C:/Users/Jost/Desktop/Arbeit Lehrstuhl/JostvPetersdorffCampen/malnutrition_india/", sep = "")
#path where your bayesx-version is stored
pathbayes <- paste("C:/Users/Jost/Desktop/Arbeit Lehrstuhl/JostvPetersdorffCampen/Release/Release/", sep = "")
#path of textfiles
# pathfiles <- paste("C:/Users/Jost/Desktop/Arbeit Lehrstuhl/malnutrition_india_local/normal", "/", sep = "")
#path of data
pathdata <-  paste(wd, "data/", sep = "")
#path for plots
if(!file.exists(paste(wd, "plots", sep = ""))) {
dir.create(paste(wd, "plots", sep = ""))
}
pathplots <-  paste(wd, "plots/", sep = "")
#path were best fitting models should be stored.
pathbest <-paste("C:/Users/Jost/Desktop/Arbeit Lehrstuhl/JostvPetersdorffCampen/malnutrition_india/clayton/clayton_cop_NK", "/", sep = "")
#===================================================
# m <- read.bnd(paste(pathdata, "state_map.bnd", sep = ""))
data <- read.table(paste(pathdata, "india.raw", sep = ""),header = TRUE)
#############################################################################
################## Probabilities
#############################################################################
#############################################################################
####### Spatial Effect on Kendall's tau
##############################################################################
m <- read.bnd(paste(pathdata, "state_map.bnd", sep = ""))
# Effect at mean age= 2 years
cage<-    0.142395
mu1age<- -0.240192
mu2age<- -0.182212
s1age<- 0.126879
s2age<- 0.0199316
constc <-  0.302124
consts1 <- 0.276036
consts2 <- 0.439296
constmu1 <- -1.36494
constmu2 <- -0.899023
constc_w   <-  constc
consts1_w  <- consts1
consts2_w  <- consts2
constmu1_w <- constmu1
constmu2_w <- constmu2
constc_m   <-  constc-0.0703043
consts1_m  <- consts1+0.0319392
consts2_m  <- consts2-0.0220131
constmu1_m <- constmu1-0.0332585
constmu2_m <- constmu2+0.0139313
prename<-"res"
cspat <- t(read.table(paste(pathbest, prename, "_MAIN_rho_REGRESSION_wasting2_spatial_MRF_effect_of_state_sample.raw", sep = ""), header = TRUE)[,-1])
mu1spat <- t(read.table(paste(pathbest, prename, "_MAIN_mu_REGRESSION_underweight2_spatial_MRF_effect_of_state_sample.raw", sep = ""), header = TRUE)[,-1])
mu2spat <- t(read.table(paste(pathbest, prename, "_MAIN_mu_REGRESSION_wasting2_spatial_MRF_effect_of_state_sample.raw", sep = ""), header = TRUE)[,-1])
s1spat <- t(read.table(paste(pathbest, prename, "_MAIN_sigma2_REGRESSION_underweight2_spatial_MRF_effect_of_state_sample.raw", sep = ""), header = TRUE)[,-1])
s2spat <- t(read.table(paste(pathbest, prename, "_MAIN_sigma2_REGRESSION_wasting2_spatial_MRF_effect_of_state_sample.raw", sep = ""), header = TRUE)[,-1])
#######################################
##   women
########################################
source(paste(pathbest, prename, "_MAIN_rho_REGRESSION_wasting2_spatial_MRF_effect_of_state_basisR.res", sep = ""))
Z <- BayesX.design.matrix(1:36)
fun <- function(samples) {
a <- ( (Z%*%(mu1spat[,samples])) +   constmu1_w + mu1age)
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
mu1_w <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- ( (Z%*%(mu2spat[,samples]))  + constmu2_w + mu2age )
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
mu2_w <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- sqrt(exp( (Z%*%(s1spat[,samples])) + consts1_w + s1age ))
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
s1_w <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- sqrt(exp( (Z%*%(s2spat[,samples])) +  consts2_w + s2age ))
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
s2_w <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- ( (Z%*%(cspat[,samples]))+ constc_w + cage )
a <- exp(a)
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
cor_w <- rowMeans(matrix(unlist(atemp),ncol=1000))
#######################################
##   men
########################################
mu1age_m<-mu1age+  0.0459739
mu2age_m<-mu2age+  0.00101433
s1age_m<- s1age  -0.00267932
s2age_m<- s2age  -0.00903491
cage_m<-  cage+  0.0519932
source(paste(pathbest, prename, "_MAIN_rho_REGRESSION_wasting2_spatial_MRF_effect_of_state_basisR.res", sep = ""))
Z <- BayesX.design.matrix(1:36)
fun <- function(samples) {
a <- ( (Z%*%(mu1spat[,samples])) +   constmu1_m + mu1age_m)
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
mu1_m <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- ( (Z%*%(mu2spat[,samples]))  + constmu2_m + mu2age_m )
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
mu2_m <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- sqrt(exp( (Z%*%(s1spat[,samples])) + consts1_m + s1age_m ))
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
s1_m <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- sqrt(exp( (Z%*%(s2spat[,samples])) +  consts2_m + s2age_m ))
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
s2_m <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- ( (Z%*%(cspat[,samples]))+ constc_m + cage_m )
a <- exp(a)
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
cor_m <- rowMeans(matrix(unlist(atemp),ncol=1000))
###################################
# here I assume that you have computed certain values for mu1,mu2,sigma1,sigma2,theta
#CDF of Clayton copula
pClayton <- function(u1, u2, rho, log=FALSE)
{
if(log)
ret <- ( exp(-log(exp(-rho*log(u1)) + exp(-rho*log(u2)) - 1)/rho)  )
else
ret <- ( (u1)^(-rho) + (u2)^(-rho) - 1 )^(-1/rho)
return(ret)
}
#### men
p1_m <- pnorm(-2,mu1_m,s1_m)-pnorm(-3,mu1_m,s1_m)	# marginal probability for moderate undernutriton for underweight
p2_m <- pnorm(-2,mu2_m,s2_m)-pnorm(-3,mu2_m,s2_m)	# marginal probability for moderate undernutriton for wasting
JPmod_m	<- pClayton(p1_m,p2_m,cor_m,log=FALSE)
p12_m <- pnorm(-3,mu1_m,s1_m)	# marginal probability for severe undernutriton for underweight
p22_m <- pnorm(-3,mu2_m,s2_m)	# marginal probability for severe undernutriton for wasting
JPsev_m	<- pClayton(p12_m,p22_m,cor_m,log=FALSE)
spat_m<-data.frame("state"=1:36,"prob"=JPmod_m)
#### women
p1_w <- pnorm(-2,mu1_w,s1_w)-pnorm(-3,mu1_w,s1_w)	# marginal probability for moderate undernutriton for underweight
p2_w <- pnorm(-2,mu2_w,s2_w)-pnorm(-3,mu2_w,s2_w)	# marginal probability for moderate undernutriton for wasting
JPmod_w	<- pClayton(p1_w,p2_w,cor_w,log=FALSE)
p12_w <- pnorm(-3,mu1_w,s1_w)	# marginal probability for severe undernutriton for underweight
p22_w <- pnorm(-3,mu2_w,s2_w)	# marginal probability for severe undernutriton for wasting
JPsev_w	<- pClayton(p12_w,p22_w,cor_w,log=FALSE)
spat_w<-data.frame("state"=1:36,"prob"=JPmod_w)
png(paste(pathplots, "probabilities.png", sep = ""),width = 1800,height = 900)
par(mfrow=c(1,2))
drawmap(map=m,regionvar="state",plotvar="prob",data=spat_w, cols = "hcl", hcl.par=list(h = c(260, 0), c = 80, l = c(30, 90), power = 1.5),
limit = c(0.05, 0.2),
main = "Moderately undernourished", cex.main = 1.8, cex.legend = 1.5)
spat_w<-data.frame("state"=1:36,"prob"=JPsev_w)
drawmap(map=m,regionvar="state",plotvar="prob",data=spat_w, cols = "hcl", hcl.par=list(h = c(260, 0), c = 80, l = c(30, 90), power = 1.5),
limit = c(0, 0.1),
main ="Severely undernourished", cex.main = 1.8, cex.legend = 1.5)
dev.off()
postscript(paste(pathplots, "probabilities.eps", sep = ""),paper="special",height=5,width=10,horizontal=FALSE)
par(mfrow=c(1,2))
spat_w<-data.frame("state"=1:36,"prob"=JPmod_w)
drawmap(map=m,regionvar="state",plotvar="prob",data=spat_w, cols = "hcl", hcl.par=list(h = c(260, 0), c = 80, l = c(30, 90), power = 1.5),
limit = c(0.01, 0.17),
main = "Moderately undernourished", cex.main = 1.8, cex.legend = 1.5)
spat_w<-data.frame("state"=1:36,"prob"=JPsev_w)
drawmap(map=m,regionvar="state",plotvar="prob",data=spat_w, cols = "hcl", hcl.par=list(h = c(260, 0), c = 80, l = c(30, 90), power = 1.5),
limit = c(0.01, 0.17),
main ="Severely undernourished", cex.main = 1.8, cex.legend = 1.5)
dev.off()
##### descriptives
for (i in 1:36){
print(nrow(data[which(data$wasting2> -3 & data$wasting2< -2 & data$underweight2 > -3 &  data$underweight2 < -2 & data$state==i),])/nrow(data[which(data$state==i),]))
}
for (i in 1:36){
print(nrow(data[which(data$wasting2< -3 & data$underweight2 < -3 & data$state==i),])/nrow(data[which(data$state==i),]))
}
#===================================================
#Malnutrition. Get plots of the paper for
#best fitting bivnormal-model (density plots)
#-----------------------------------------------
#Author: Jost von Petersdorff-Campen, petersdj@hu-berlin.de
#last edited on 19.04.2020
#===================================================
packages<-c("BayesX",
"mvtnorm")
for (package in packages){
if (!package %in% installed.packages()){
install.packages(package, repos = "https://cran.rstudio.com")
}
if (!package %in% .packages()) {
library(package, character.only = TRUE)
}
}
#==
#please adapt accordingly!
#working directory
wd <- paste("C:/Users/Jost/Desktop/Arbeit Lehrstuhl/JostvPetersdorffCampen/malnutrition_india/", sep = "")
#path where your bayesx-version is stored
pathbayes <- paste("C:/Users/Jost/Desktop/Arbeit Lehrstuhl/JostvPetersdorffCampen/Release/Release/", sep = "")
#path of textfiles
pathfiles <- paste("C:/Users/Jost/Desktop/Arbeit Lehrstuhl/malnutrition_india_local/normal", "/", sep = "")
#path of data
pathdata <-  paste(wd, "data/", sep = "")
#path for plots
if(!file.exists(paste(wd, "plots", sep = ""))) {
dir.create(paste(wd, "plots", sep = ""))
}
pathplots <-  paste(wd, "plots/", sep = "")
#path were best fitting models should be stored.
pathbest <-paste("C:/Users/Jost/Desktop/Arbeit Lehrstuhl/malnutrition_india_local/binormal/bivnormal", "/", sep = "")
#===================================================
# m <- read.bnd(paste(pathdata, "state_map.bnd", sep = ""))
data <- read.table(paste(pathdata, "india.raw", sep = ""),header = TRUE)
x1 <- data$csex
x2 <- data$cage
y1 <- data$underweight2
y2 <- data$wasting2
#-------------------------------------------------------------------------------------------------------------------------------------------
# Normal ------------
#------------------------------------------------------------------------------------------------------------------------------------------
######### TO BE ADAPTED ################
#from here quantile plots for four ages (and all other effects kept constant) Clayton copula stunting wasting
prename <- "res"
#the quantities can be obtained from log_cop.txt!!
constc <-   0.904932
consts1 <-  0.0950244
consts2 <-  0.155774
constmu1 <- -1.39437
constmu2 <- -0.934425
# Use state 33, since it has most observations
mu1spat <- 0.158992
mu2spat <- -0.166127
s1spat <-  -0.0822018
s2spat <-  -0.131534
cspat <-   -0.0318933
cage <- t(read.table(paste(pathbest, prename, "_MAIN_rho_REGRESSION_wasting2_nonlinear_pspline_effect_of_cage_sample.raw", sep = ""), header = TRUE)[,-1])
mu1age <- t(read.table(paste(pathbest, prename, "_MAIN_mu_REGRESSION_underweight2_nonlinear_pspline_effect_of_cage_sample.raw", sep = ""), header = TRUE)[,-1])
mu2age <- t(read.table(paste(pathbest, prename, "_MAIN_mu_REGRESSION_wasting2_nonlinear_pspline_effect_of_cage_sample.raw", sep = ""), header = TRUE)[,-1])
s1age <- t(read.table(paste(pathbest, prename, "_MAIN_sigma_REGRESSION_underweight2_nonlinear_pspline_effect_of_cage_sample.raw", sep = ""), header = TRUE)[,-1])
s2age <- t(read.table(paste(pathbest, prename, "_MAIN_sigma_REGRESSION_wasting2_nonlinear_pspline_effect_of_cage_sample.raw", sep = ""), header = TRUE)[,-1])
xcage <-read.table(paste(pathbest, prename, "_MAIN_rho_REGRESSION_wasting2_nonlinear_pspline_effect_of_cage.res", sep = ""), header = TRUE)$cage
xcage.part <- c(0.5,1,2,4)
#############################################################################
####### Women
##############################################################################
constc_w   <-  constc
consts1_w  <- consts1
consts2_w  <- consts2
constmu1_w <-constmu1
constmu2_w <-constmu2
source(paste(pathbest, prename, "_MAIN_rho_REGRESSION_wasting2_nonlinear_pspline_effect_of_cage_basisR.res", sep = ""))
Z <- BayesX.design.matrix(xcage.part)
fun <- function(samples) {
a <- ( (Z%*%(mu1age[,samples])) +   constmu1_w + mu1spat )
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
mu1 <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- ( (Z%*%(mu2age[,samples]))  + constmu2_w + mu2spat )
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
mu2 <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- sqrt(exp( (Z%*%(s1age[,samples])) + consts1_w + s1spat ))
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
s1 <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- sqrt(exp( (Z%*%(s2age[,samples])) +  consts2_w + s2spat ))
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
s2 <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- ( (Z%*%(cage[,samples]))+ constc_w + cspat )
a <- a/sqrt(1+a^2)
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
cor <- rowMeans(matrix(unlist(atemp),ncol=1000))
corsd <- apply(matrix(unlist(atemp),ncol=1000), MARGIN = 1, FUN = function(x){sqrt(var(x))})
corlower <- apply(matrix(unlist(atemp),ncol=1000), MARGIN = 1, FUN = function(x){quantile(x, prob = 0.025)})
corupper <- apply(matrix(unlist(atemp),ncol=1000), MARGIN = 1, FUN = function(x){quantile(x, prob = 0.975)})
param_est <- data.frame(mu1 = mu1, mu2 = mu2, s1 = s1, s2 = s2, cor = cor, corsd = corsd, corlower = corlower, corupper = corupper)
write.table(param_est, paste(pathbest, prename, "param_contourplots.raw", sep = ""), quote = FALSE, row.names = FALSE)
y1.seq <- seq(-6,6,by=0.1)
y2.seq <- seq(-6,6,by=0.1)
mu1_w<-mu1
mu2_w<-mu2
s1_w<-s1
s2_w<-s2
cor_w<-cor
corlower_w<-corlower
corupper_w<-corupper
#############################################################################
####### Men
##############################################################################
constc_m   <-  constc-0.0460998
consts1_m  <- consts1+0.0174237
consts2_m  <- consts2-0.0117923
constmu1_m <-constmu1-0.0262394
constmu2_m <-constmu2+0.0148434
cagesex <- t(read.table(paste(pathbest, prename, "_MAIN_rho_REGRESSION_wasting2_nonlinear_pspline_effect_of_csex_cage_sample.raw", sep = ""), header = TRUE)[,-1])
mu1agesex <- t(read.table(paste(pathbest, prename, "_MAIN_mu_REGRESSION_underweight2_nonlinear_pspline_effect_of_csex_cage_sample.raw", sep = ""), header = TRUE)[,-1])
mu2agesex <- t(read.table(paste(pathbest, prename, "_MAIN_mu_REGRESSION_wasting2_nonlinear_pspline_effect_of_csex_cage_sample.raw", sep = ""), header = TRUE)[,-1])
s1agesex <- t(read.table(paste(pathbest, prename, "_MAIN_sigma_REGRESSION_underweight2_nonlinear_pspline_effect_of_csex_cage_sample.raw", sep = ""), header = TRUE)[,-1])
s2agesex <- t(read.table(paste(pathbest, prename, "_MAIN_sigma_REGRESSION_wasting2_nonlinear_pspline_effect_of_csex_cage_sample.raw", sep = ""), header = TRUE)[,-1])
source(paste(pathbest, prename, "_MAIN_mu_REGRESSION_underweight2_nonlinear_pspline_effect_of_cage_basisR.res", sep = ""))
Z <- BayesX.design.matrix(xcage.part)
fun <- function(samples) {
a <- ( (Z%*%(mu1age[,samples]))+ (Z%*%(mu1agesex[,samples])) +   constmu1_m + mu1spat )
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
mu1 <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- ( (Z%*%(mu2age[,samples]))+(Z%*%(mu2agesex[,samples]))  + constmu2_m + mu2spat )
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
mu2 <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- sqrt(exp( (Z%*%(s1age[,samples]))+(Z%*%(s1agesex[,samples])) + consts1_m + s1spat ))
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
s1 <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- sqrt(exp( (Z%*%(s1age[,samples]))+(Z%*%(s1agesex[,samples])) +  consts2_m + s2spat ))
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
s2 <- rowMeans(matrix(unlist(atemp),ncol=1000))
fun <- function(samples) {
a <- ( (Z%*%(cage[,samples]))+(Z%*%(cagesex[,samples]))+ constc_m + cspat )
a <- (a)/(sqrt(1+a^2))
return(a)
}
atemp <- lapply(1:1000,FUN=fun)
cor <- rowMeans(matrix(unlist(atemp),ncol=1000))
cor2<-cor
corsd <- apply(matrix(unlist(atemp),ncol=1000), MARGIN = 1, FUN = function(x){sqrt(var(x))})
corlower <- apply(matrix(unlist(atemp),ncol=1000), MARGIN = 1, FUN = function(x){quantile(x, prob = 0.025)})
corupper <- apply(matrix(unlist(atemp),ncol=1000), MARGIN = 1, FUN = function(x){quantile(x, prob = 0.975)})
mu1_m<-mu1
mu2_m<-mu2
s1_m<-s1
s2_m<-s2
cor_m<-cor
corlower_m<-corlower
corupper_m<-corupper
#############################################################################
####### Contour Plot 1
##############################################################################
label=c("a)","b)","c)","d)")
main=c("child's age = 6 months","child's age = 1 year","child's age = 2 years","child's age = 4 years")
age<-c(0,0.75,1.5,3,5)
covar_w=s1_w*s2_w*cor_w
covar_m=s1_m*s2_m*cor_m
# label=c("a)","b)","c)","d)")
# age<-c(0,0.5,1,1.6333,3)
postscript (paste(pathplots,"biv_cont.eps",sep=""))
par(mfrow=c(2,2),mar=c(5.1,6.1,4.1,2.1)-1)
for (l in 1:4){
cov_w=matrix(data=c(s1_w[l],covar_w[l],covar_w[l],s2_w[l]),ncol = 2,nrow = 2,byrow = TRUE)
cov_m=matrix(data=c(s1_m[l],covar_m[l],covar_m[l],s2_m[l]),ncol = 2,nrow = 2,byrow = TRUE)
x.points <-seq(-5,3,length.out=100)
y.points <- x.points
z_w <-matrix(0,nrow=100,ncol=100)
z_m <-matrix(0,nrow=100,ncol=100)
for (i in 1:100) {
for (j in 1:100) {
z_w[i,j] <-dmvnorm(c(x.points[i],y.points[j]),mean=c(mu1_w[l],mu2_w[l]),sigma = cov_w)
z_m[i,j] <-dmvnorm(c(x.points[i],y.points[j]),mean=c(mu1_m[l],mu2_m[l]),sigma = cov_m)
}}
# png(paste("contour_mvn_",l,".png",sep=""))
plot(subset(data,cage<age[l+1] & cage >= age[l])[,c("underweight2","wasting2")], cex.main=1.7,cex.lab=1.5,
xlim=c(-6,6),ylim=c(-6,6),type = "p",col="gray",xlab="underweight", ylab="wasting",main=main[l])
legend(-6,-5,col = "gray",paste("= children between",age[l]*12,"and",age[l+1]*12,"months"),pch=1,bty = "n")
contour(x.points,y.points,z_w,labels=seq(0.01,0.07,by=0.02),add=TRUE,levels=seq(0.01,0.07,by=0.02),nlevels=4,method="flattest",labcex=1.5,lwd=2,drawlabels=FALSE,col="red")
contour(x.points,y.points,z_m,labels=seq(0.01,0.07,by=0.02),add=TRUE,levels=seq(0.01,0.07,by=0.02),nlevels=4,method="flattest",labcex=1.5,lwd=2,drawlabels=FALSE,col="blue")
textt <- bquote(paste(mu[underweight], " = ", .(round(mu1_m[l], digits = 2)), sep = ""))
text(2.45, -2.4, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(mu[wasting], " = ", .(round(mu2_m[l], digits = 2)), sep = ""))
text(2.45, -3.2, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(sigma[underweight], " = ", .(round(s1_m[l], digits = 2)), sep = ""))
text(2.45, -4.0, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(sigma[wasting], " = ", .(round(s2_m[l], digits = 2)), sep = ""))
text(2.45, -4.8, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(rho, " = ", .(round(cor_m[l], digits = 2)), " [", .(round(corlower_m[l], digits = 2)),",", .(round(corupper_m[1], digits = 2)), "]", sep = ""))
text(2.45, -1.6, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(mu[underweight], " = ", .(round(mu1_w[l], digits = 2)), sep = ""))
text(2.45, 4.0, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(mu[wasting], " = ", .(round(mu2_w[l], digits = 2)), sep = ""))
text(2.45, 3.2, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(sigma[underweight], " = ", .(round(s1_w[l], digits = 2)), sep = ""))
text(2.45, 2.4, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(sigma[wasting], " = ", .(round(s2_w[l], digits = 2)), sep = ""))
text(2.45, 1.6, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(rho, " = ", .(round(cor_w[l], digits = 2)), " [", .(round(corlower_w[l], digits = 2)),",", .(round(corupper_m[1], digits = 2)), "]", sep = ""))
text(2.45, 4.8, textt, cex = 1.1,adj = c(0,NA))
# readline(prompt="Press [enter] to continue")
}
dev.off()
cov_w=matrix(data=c(s1_w[l],covar_w[l],covar_w[l],s2_w[l]),ncol = 2,nrow = 2,byrow = TRUE)
cov_m=matrix(data=c(s1_m[l],covar_m[l],covar_m[l],s2_m[l]),ncol = 2,nrow = 2,byrow = TRUE)
x.points <-seq(-5,3,length.out=100)
y.points <- x.points
z_w <-matrix(0,nrow=100,ncol=100)
z_m <-matrix(0,nrow=100,ncol=100)
for (i in 1:100) {
for (j in 1:100) {
z_w[i,j] <-dmvnorm(c(x.points[i],y.points[j]),mean=c(mu1_w[l],mu2_w[l]),sigma = cov_w)
z_m[i,j] <-dmvnorm(c(x.points[i],y.points[j]),mean=c(mu1_m[l],mu2_m[l]),sigma = cov_m)
}}
plot(subset(data,cage<age[l+1] & cage >= age[l])[,c("underweight2","wasting2")], cex.main=1.7,cex.lab=1.5,
xlim=c(-6,6),ylim=c(-6,6),type = "p",col="gray",xlab="underweight", ylab="wasting",main=main[l])
legend(-6,-5,col = "gray",paste("= children between",age[l]*12,"and",age[l+1]*12,"months"),pch=1,bty = "n")
contour(x.points,y.points,z_w,labels=seq(0.01,0.07,by=0.02),add=TRUE,levels=seq(0.01,0.07,by=0.02),nlevels=4,method="flattest",labcex=1.5,lwd=2,drawlabels=FALSE,col="red")
contour(x.points,y.points,z_m,labels=seq(0.01,0.07,by=0.02),add=TRUE,levels=seq(0.01,0.07,by=0.02),nlevels=4,method="flattest",labcex=1.5,lwd=2,drawlabels=FALSE,col="blue")
textt <- bquote(paste(mu[underweight], " = ", .(round(mu1_m[l], digits = 2)), sep = ""))
text(2.45, -2.4, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(mu[wasting], " = ", .(round(mu2_m[l], digits = 2)), sep = ""))
text(2.45, -3.2, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(sigma[underweight], " = ", .(round(s1_m[l], digits = 2)), sep = ""))
text(2.45, -4.0, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(sigma[wasting], " = ", .(round(s2_m[l], digits = 2)), sep = ""))
text(2.45, -4.8, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(rho, " = ", .(round(cor_m[l], digits = 2)), " [", .(round(corlower_m[l], digits = 2)),",", .(round(corupper_m[1], digits = 2)), "]", sep = ""))
text(2.45, -1.6, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(mu[underweight], " = ", .(round(mu1_w[l], digits = 2)), sep = ""))
text(2.45, 4.0, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(mu[wasting], " = ", .(round(mu2_w[l], digits = 2)), sep = ""))
text(2.45, 3.2, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(sigma[underweight], " = ", .(round(s1_w[l], digits = 2)), sep = ""))
text(2.45, 2.4, textt, cex = 1.1,adj = c(0,NA))
textt <- bquote(paste(sigma[wasting], " = ", .(round(s2_w[l], digits = 2)), sep = ""))
rnorm(5000)
x<-c()
for (i in 1:5000){
x<-x+rnorm(1)
}
plot(1:5000,x)
x<-c()
for (i in 1:5000){
x<-c(x,x+rnorm(1))
}
plot(1:5000,x)
x<-0
for (i in 1:5000){
x<-c(x,x+rnorm(1))
}
x<-0
for (i in 1:5000){
x<-c(x,x+rnorm(1))
}
for (i in 1:1000){
x<-c(x,x+rnorm(1))
}
x<-0
for (i in 1:1000){
x<-c(x,x+rnorm(1))
}
plot(1:1000,x)
e<-rnorm(5000)
z<-cumsum(e)
plot(1:5000,z)
plot(1:50000,z)
z<-cumsum(e)
plot(1:50000,z)
e<-rnorm(50000)
z<-cumsum(e)
plot(1:50000,z)
plot(1:50000,z,type="l")
e<-rnorm(500)
z<-cumsum(e)
plot(1:500,z,type="l")
getwd()
setwd("C:/Users/Jost/Desktop/Master/Masterarbeit/python")
dir()
read.csv("train_weather.csv")
data<-read.csv("train_weather.csv")
